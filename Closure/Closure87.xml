<?xml version="1.0" encoding="ISO-8859-1"?>

<bugrepository name="Closure87">
 <bug id="291" opendate="2004-10-06 17:02:00" fixdate="2004-10-18 17:40:00">
    <buginformation>
      <summary>IE8 error: Object doesn't support this action</summary>
      <description>
&lt;b&gt;What steps will reproduce the problem?&lt;/b&gt;
1. Use script with fragment like

    if (e.onchange) {

      e.onchange({

        _extendedByPrototype: Prototype.emptyFunction,

        target: e

      });

    }

2. Compile with Compiler (command-line, latest version)

3. Use in IE8



What is the expected output?

Script:

if(b.onchange){b.onchange({_extendedByPrototype:Prototype.emptyFunction,target

:b})}



What do you see instead?

Script:

b.onchange&amp;&amp;b.onchange({_extendedByPrototype:Prototype.emptyFunction,target

:b})

IE8:

Error message &quot;Object doesn't support this action&quot;



&lt;b&gt;What version of the product are you using? On what operating system?&lt;/b&gt;gt
Version: 20100917 (revision 440)

Built on: 2010/09/17 17:55

Can you provide more details here?  I'm unable to reproduce a problem in IE8 with "b.onchange &amp;&amp; b.onchange(..."I use third-party javascript library, which assigns event handler to element.onchange property (e.g. $('id').onchange=function(event){...}). In other part of library this onchange handler is invoked directly after changing content of element, using fake event object:



  e.value = 'some value';

  if (e.onchange) {

    e.onchange({

      _extendedByPrototype: Prototype.emptyFunction,

      target: e

    });

  }



So IE7 and IE8 (and maybe IE6) executes script

  if (e.onchange) {e.onchange(...);}

but fires error "Object doesn't support this action" on optimized script

  e.onchange&amp;&amp;e.onchange(...);

Can you provide a small program that demonstrates this?

"e.onchange()" should not be called in either case.  Maybe the problem is elsewhere?



Here is what I used to try to reproduce the problem:





&lt;html&gt;

&lt;head&gt;

&lt;script&gt;

setTimeout(function () {



var e = document.getElementById('foo');

if (e) {

  alert('ok')

}



if (e.onchange &amp;&amp; e.onchange({ext: function(){}, target: e})) {

  alert('unexpected');

} else {

  alert('ok');

}



e.onchange = function() {return true};

if (e.onchange &amp;&amp; e.onchange({ext: function(){}, target: e})) {

  alert('ok');

} else {

  alert('unexpected');

}



}, 100);

&lt;/script&gt;

&lt;/head&gt;

&lt;body&gt;



&lt;div id="foo"&gt;&lt;/div&gt;



Some text.



&lt;/body&gt;

&lt;/html&gt;Comment deletedComment 4 by lior.berry, Today (16 minutes ago)



I encountered a similar error in IE 8, when trying to use swfobject.js (http://ajax.googleapis.com/ajax/libs/swfobject/2.1/swfobject.js) that I compiled with the closure compiler.



I am getting the following error in IE8 only: 



Message: Unexpected call to method or property access.

Line: 10

Char: 285

Code: 0

URI: http://myserveraddress/swfobject_2_1-compiled.js



If I use the non-compiled version of the script it works fine. In addition, compiling version 2.2 of swfobject.js also works fine, so maybe diffing the two versions can help you narrow down the problem



This is the html code I use:



&lt;html&gt;

&lt;head&gt;

&lt;script src="./swfobject_2_1-compiled.js" type="text/javascript"&gt;&lt;/script&gt;

&lt;/head&gt;

&lt;body&gt;

&lt;h1&lt;testing ...&lt;/h1&gt;

&lt;script type="text/javascript"&gt;

swfobject.embedSWF("player.swf","player_placeholder", "480", "360", "9.0.115", false,

{}, {},{});

&lt;/script&gt;

&lt;/body&gt;

&lt;/html&gt;

Here is an example (clicking on 'Test' button causes error in IE6-8):



&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;

&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;

  &lt;head&gt;

    &lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;

    &lt;title&gt;onchange&lt;/title&gt;

    &lt;script type="text/javascript"&gt;

      function testOnchange() {

        var s = document.getElementById("select");

        s &amp;&amp;

        s.onchange({

          ext: function() {

          },

          target: s

        });

      }

    &lt;/script&gt;

  &lt;/head&gt;

  &lt;body&gt;

    &lt;form id="form" action="#"&gt;

      &lt;select id="select"&gt;

        &lt;option&gt;1&lt;/option&gt;

        &lt;option&gt;2&lt;/option&gt;

      &lt;/select&gt;

      &lt;input type="button" value="Test" onclick="testOnchange();"/&gt;
    &lt;/form&gt;

    &lt;script type="text/javascript"&gt;

      var s = document.getElementById("select");

      s.onchange = function(e) {

        alert("Changed to " + e.target.value);

      };

    &lt;/script&gt;

  &lt;/body&gt;
&lt;/html&gt;

Maybe specific to the "select" element in IE.And what to do now?



Use older versions of compiler (and wait for new release)?



Do not use compiler at all (you'll never fix it)?



Or somehow tell him not to "optimize" expressions of type "if (object.method){object.method();}"?By the way, it happens not only on select fields - also on text inputs (input type="text").I'm not convinced that it's as simple as escaping that one optimization. I think we need to have a better handle on why IE does this, so we know how to work around it in other cases.i've narrowed vkhomyackov's testOnchange down to this:

    &lt;script type="text/javascript"&gt;

      function testOnchange() {

        var s = document.getElementById("select");

        1 &amp;&amp; s.onchange({});

      }

    &lt;/script&gt;



the "1 &amp;&amp;" and the object literal are both necessary. removing the bug go away. Notably, the bug does not appear if you have:



        1 &amp;&amp; (s.onchange({}), 0);



Somehow it's contingent on the return value of s.onchange being consumed by another expression. The bug also reproduces if you have:



        return s.onchange({});after a few more tests, here's my half-assed theory of what's happening:



In IE, Nodes are implemented as COM objects. I assume that these COM objects have some special logic for event handler properties (like 'onchange'), because foo.onchange = "some string"; will convert the string into a function. So perhaps they have some internal pointers to those functions.



Let's also suppose that COM objects have some logic for doing overloaded method dispatch.



For some reason, calling s.onchange({}) and using its return value triggers a bug in the overloaded method dispatcher, which makes it call native method, instead of the method on the internal pointer.



Again, this is all very much guess-work, and is probably wrong on some key points (if not all of them). But the explanation is consistent with the behavior I'm seeing. It only happens when both the return value and parameter are used (regardless of what they are or how they're used), and I can't repro with any methods that aren't event handlers.



It may be enough to add a shim to check for this specific case.



Fortunately, the bug is not in IE9. But if I ever run into one of the IE engineers i may ask them about it.This issue was closed by revision r631.Issue 371 has been merged into this issue.
      </description>
    </buginformation>
    <fixedFiles>
      <file>com.google.javascript.jscomp.AbstractCommandLineRunner.java</file>
      <file>com.google.javascript.jscomp.AbstractCompiler.java</file>
      <file>com.google.javascript.jscomp.AbstractMessageFormatter.java</file>
      <file>com.google.javascript.jscomp.AbstractPeepholeOptimization.java</file>
      <file>com.google.javascript.jscomp.AliasExternals.java</file>
      <file>com.google.javascript.jscomp.AliasKeywords.java</file>
      <file>com.google.javascript.jscomp.AliasStrings.java</file>
      <file>com.google.javascript.jscomp.AmbiguateProperties.java</file>
      <file>com.google.javascript.jscomp.AnalyzeNameReferences.java</file>
      <file>com.google.javascript.jscomp.AnalyzePrototypeProperties.java</file>
      <file>com.google.javascript.jscomp.AnonymousFunctionNamingCallback.java</file>
      <file>com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.java</file>
      <file>com.google.javascript.jscomp.ant.AntErrorManager.java</file>
      <file>com.google.javascript.jscomp.ant.CompileTask.java</file>
      <file>com.google.javascript.jscomp.AstChangeProxy.java</file>
      <file>com.google.javascript.jscomp.AstParallelizer.java</file>
      <file>com.google.javascript.jscomp.BasicErrorManager.java</file>
      <file>com.google.javascript.jscomp.CallGraph.java</file>
      <file>com.google.javascript.jscomp.ChainableReverseAbstractInterpreter.java</file>
      <file>com.google.javascript.jscomp.ChainCalls.java</file>
      <file>com.google.javascript.jscomp.CheckAccessControls.java</file>
      <file>com.google.javascript.jscomp.CheckAccidentalSemicolon.java</file>
      <file>com.google.javascript.jscomp.CheckGlobalNames.java</file>
      <file>com.google.javascript.jscomp.CheckGlobalThis.java</file>
      <file>com.google.javascript.jscomp.CheckLevel.java</file>
      <file>com.google.javascript.jscomp.CheckLevelLegacy.java</file>
      <file>com.google.javascript.jscomp.CheckMissingGetCssName.java</file>
      <file>com.google.javascript.jscomp.CheckMissingReturn.java</file>
      <file>com.google.javascript.jscomp.CheckPathsBetweenNodes.java</file>
      <file>com.google.javascript.jscomp.CheckProvides.java</file>
      <file>com.google.javascript.jscomp.CheckRegExp.java</file>
      <file>com.google.javascript.jscomp.CheckRequiresForConstructors.java</file>
      <file>com.google.javascript.jscomp.CheckSideEffects.java</file>
      <file>com.google.javascript.jscomp.CheckUnreachableCode.java</file>
      <file>com.google.javascript.jscomp.ClosureCodeRemoval.java</file>
      <file>com.google.javascript.jscomp.ClosureCodingConvention.java</file>
      <file>com.google.javascript.jscomp.ClosureReverseAbstractInterpreter.java</file>
      <file>com.google.javascript.jscomp.CoalesceVariableNames.java</file>
      <file>com.google.javascript.jscomp.CodeChangeHandler.java</file>
      <file>com.google.javascript.jscomp.CodeConsumer.java</file>
      <file>com.google.javascript.jscomp.CodeGenerator.java</file>
      <file>com.google.javascript.jscomp.CodePrinter.java</file>
      <file>com.google.javascript.jscomp.CodingConvention.java</file>
      <file>com.google.javascript.jscomp.CollapseAnonymousFunctions.java</file>
      <file>com.google.javascript.jscomp.CollapseProperties.java</file>
      <file>com.google.javascript.jscomp.CollapseVariableDeclarations.java</file>
      <file>com.google.javascript.jscomp.CombinedCompilerPass.java</file>
      <file>com.google.javascript.jscomp.CommandLineRunner.java</file>
      <file>com.google.javascript.jscomp.CompilationLevel.java</file>
      <file>com.google.javascript.jscomp.Compiler.java</file>
      <file>com.google.javascript.jscomp.CompilerInput.java</file>
      <file>com.google.javascript.jscomp.CompilerOptions.java</file>
      <file>com.google.javascript.jscomp.CompilerPass.java</file>
      <file>com.google.javascript.jscomp.ComposeWarningsGuard.java</file>
      <file>com.google.javascript.jscomp.ConcreteType.java</file>
      <file>com.google.javascript.jscomp.ConstCheck.java</file>
      <file>com.google.javascript.jscomp.ControlFlowAnalysis.java</file>
      <file>com.google.javascript.jscomp.ControlFlowGraph.java</file>
      <file>com.google.javascript.jscomp.ControlStructureCheck.java</file>
      <file>com.google.javascript.jscomp.ConvertToDottedProperties.java</file>
      <file>com.google.javascript.jscomp.CreateSyntheticBlocks.java</file>
      <file>com.google.javascript.jscomp.CrossModuleCodeMotion.java</file>
      <file>com.google.javascript.jscomp.CrossModuleMethodMotion.java</file>
      <file>com.google.javascript.jscomp.CssRenamingMap.java</file>
      <file>com.google.javascript.jscomp.CustomPassExecutionTime.java</file>
      <file>com.google.javascript.jscomp.DataFlowAnalysis.java</file>
      <file>com.google.javascript.jscomp.DeadAssignmentsElimination.java</file>
      <file>com.google.javascript.jscomp.DefaultCodingConvention.java</file>
      <file>com.google.javascript.jscomp.DefaultPassConfig.java</file>
      <file>com.google.javascript.jscomp.DefinitionProvider.java</file>
      <file>com.google.javascript.jscomp.DefinitionSite.java</file>
      <file>com.google.javascript.jscomp.DefinitionsRemover.java</file>
      <file>com.google.javascript.jscomp.Denormalize.java</file>
      <file>com.google.javascript.jscomp.deps.DependencyInfo.java</file>
      <file>com.google.javascript.jscomp.deps.DepsFileParser.java</file>
      <file>com.google.javascript.jscomp.deps.JsFileLineParser.java</file>
      <file>com.google.javascript.jscomp.deps.JsFileParser.java</file>
      <file>com.google.javascript.jscomp.deps.JsFunctionParser.java</file>
      <file>com.google.javascript.jscomp.deps.SimpleDependencyInfo.java</file>
      <file>com.google.javascript.jscomp.deps.SortedDependencies.java</file>
      <file>com.google.javascript.jscomp.DevirtualizePrototypeMethods.java</file>
      <file>com.google.javascript.jscomp.DiagnosticGroup.java</file>
      <file>com.google.javascript.jscomp.DiagnosticGroups.java</file>
      <file>com.google.javascript.jscomp.DiagnosticGroupWarningsGuard.java</file>
      <file>com.google.javascript.jscomp.DiagnosticType.java</file>
      <file>com.google.javascript.jscomp.DisambiguateProperties.java</file>
      <file>com.google.javascript.jscomp.DotFormatter.java</file>
      <file>com.google.javascript.jscomp.ErrorFormat.java</file>
      <file>com.google.javascript.jscomp.ErrorManager.java</file>
      <file>com.google.javascript.jscomp.ErrorPass.java</file>
      <file>com.google.javascript.jscomp.ExportTestFunctions.java</file>
      <file>com.google.javascript.jscomp.ExpressionDecomposer.java</file>
      <file>com.google.javascript.jscomp.ExternExportsPass.java</file>
      <file>com.google.javascript.jscomp.ExtractPrototypeMemberDeclarations.java</file>
      <file>com.google.javascript.jscomp.FindExportableNodes.java</file>
      <file>com.google.javascript.jscomp.FlowScope.java</file>
      <file>com.google.javascript.jscomp.FlowSensitiveInlineVariables.java</file>
      <file>com.google.javascript.jscomp.FunctionArgumentInjector.java</file>
      <file>com.google.javascript.jscomp.FunctionInjector.java</file>
      <file>com.google.javascript.jscomp.FunctionNames.java</file>
      <file>com.google.javascript.jscomp.FunctionRewriter.java</file>
      <file>com.google.javascript.jscomp.FunctionToBlockMutator.java</file>
      <file>com.google.javascript.jscomp.FunctionTypeBuilder.java</file>
      <file>com.google.javascript.jscomp.GatherRawExports.java</file>
      <file>com.google.javascript.jscomp.GatherSideEffectSubexpressionsCallback.java</file>
      <file>com.google.javascript.jscomp.GenerateExports.java</file>
      <file>com.google.javascript.jscomp.GlobalNamespace.java</file>
      <file>com.google.javascript.jscomp.GoogleCodingConvention.java</file>
      <file>com.google.javascript.jscomp.graph.AdjacencyGraph.java</file>
      <file>com.google.javascript.jscomp.graph.Annotatable.java</file>
      <file>com.google.javascript.jscomp.graph.Annotation.java</file>
      <file>com.google.javascript.jscomp.graph.DiGraph.java</file>
      <file>com.google.javascript.jscomp.graph.FixedPointGraphTraversal.java</file>
      <file>com.google.javascript.jscomp.graph.Graph.java</file>
      <file>com.google.javascript.jscomp.graph.GraphColoring.java</file>
      <file>com.google.javascript.jscomp.graph.GraphNode.java</file>
      <file>com.google.javascript.jscomp.graph.GraphReachability.java</file>
      <file>com.google.javascript.jscomp.graph.GraphvizGraph.java</file>
      <file>com.google.javascript.jscomp.graph.LinkedDirectedGraph.java</file>
      <file>com.google.javascript.jscomp.graph.LinkedUndirectedGraph.java</file>
      <file>com.google.javascript.jscomp.graph.StandardUnionFind.java</file>
      <file>com.google.javascript.jscomp.graph.SubGraph.java</file>
      <file>com.google.javascript.jscomp.graph.UndiGraph.java</file>
      <file>com.google.javascript.jscomp.graph.UnionFind.java</file>
      <file>com.google.javascript.jscomp.GroupVariableDeclarations.java</file>
      <file>com.google.javascript.jscomp.IgnoreCajaProperties.java</file>
      <file>com.google.javascript.jscomp.InferJSDocInfo.java</file>
      <file>com.google.javascript.jscomp.InlineCostEstimator.java</file>
      <file>com.google.javascript.jscomp.InlineFunctions.java</file>
      <file>com.google.javascript.jscomp.InlineGetters.java</file>
      <file>com.google.javascript.jscomp.InlineVariables.java</file>
      <file>com.google.javascript.jscomp.InstrumentFunctions.java</file>
      <file>com.google.javascript.jscomp.InvocationsCallback.java</file>
      <file>com.google.javascript.jscomp.JoinOp.java</file>
      <file>com.google.javascript.jscomp.JsAst.java</file>
      <file>com.google.javascript.jscomp.JSError.java</file>
      <file>com.google.javascript.jscomp.JsMessage.java</file>
      <file>com.google.javascript.jscomp.JsMessageDefinition.java</file>
      <file>com.google.javascript.jscomp.JsMessageExtractor.java</file>
      <file>com.google.javascript.jscomp.JsMessageVisitor.java</file>
      <file>com.google.javascript.jscomp.JSModule.java</file>
      <file>com.google.javascript.jscomp.JSModuleGraph.java</file>
      <file>com.google.javascript.jscomp.jsonml.ErrorLevel.java</file>
      <file>com.google.javascript.jscomp.jsonml.JsonML.java</file>
      <file>com.google.javascript.jscomp.jsonml.JsonMLAst.java</file>
      <file>com.google.javascript.jscomp.jsonml.JsonMLError.java</file>
      <file>com.google.javascript.jscomp.jsonml.JsonMLException.java</file>
      <file>com.google.javascript.jscomp.jsonml.JsonMLUtil.java</file>
      <file>com.google.javascript.jscomp.jsonml.NodeUtil.java</file>
      <file>com.google.javascript.jscomp.jsonml.Reader.java</file>
      <file>com.google.javascript.jscomp.jsonml.SecureCompiler.java</file>
      <file>com.google.javascript.jscomp.jsonml.TagAttr.java</file>
      <file>com.google.javascript.jscomp.jsonml.TagType.java</file>
      <file>com.google.javascript.jscomp.jsonml.Validator.java</file>
      <file>com.google.javascript.jscomp.jsonml.Writer.java</file>
      <file>com.google.javascript.jscomp.JSSourceFile.java</file>
      <file>com.google.javascript.jscomp.LatticeElement.java</file>
      <file>com.google.javascript.jscomp.LightweightMessageFormatter.java</file>
      <file>com.google.javascript.jscomp.LineNumberCheck.java</file>
      <file>com.google.javascript.jscomp.LinkedFlowScope.java</file>
      <file>com.google.javascript.jscomp.LiveVariablesAnalysis.java</file>
      <file>com.google.javascript.jscomp.LocaleUtil.java</file>
      <file>com.google.javascript.jscomp.LoggerErrorManager.java</file>
      <file>com.google.javascript.jscomp.MakeDeclaredNamesUnique.java</file>
      <file>com.google.javascript.jscomp.MarkNoSideEffectCalls.java</file>
      <file>com.google.javascript.jscomp.MaybeReachingVariableUse.java</file>
      <file>com.google.javascript.jscomp.MemoizedScopeCreator.java</file>
      <file>com.google.javascript.jscomp.MessageBundle.java</file>
      <file>com.google.javascript.jscomp.MessageFormatter.java</file>
      <file>com.google.javascript.jscomp.MethodCompilerPass.java</file>
      <file>com.google.javascript.jscomp.MinimizeExitPoints.java</file>
      <file>com.google.javascript.jscomp.MoveFunctionDeclarations.java</file>
      <file>com.google.javascript.jscomp.MustBeReachingVariableDef.java</file>
      <file>com.google.javascript.jscomp.NameAnalyzer.java</file>
      <file>com.google.javascript.jscomp.NameAnonymousFunctions.java</file>
      <file>com.google.javascript.jscomp.NameAnonymousFunctionsMapped.java</file>
      <file>com.google.javascript.jscomp.NameGenerator.java</file>
      <file>com.google.javascript.jscomp.NameReferenceGraph.java</file>
      <file>com.google.javascript.jscomp.NameReferenceGraphConstruction.java</file>
      <file>com.google.javascript.jscomp.NameReferenceGraphReport.java</file>
      <file>com.google.javascript.jscomp.NodeIterators.java</file>
      <file>com.google.javascript.jscomp.NodeNameExtractor.java</file>
      <file>com.google.javascript.jscomp.NodeTraversal.java</file>
      <file>com.google.javascript.jscomp.NodeUtil.java</file>
      <file>com.google.javascript.jscomp.Normalize.java</file>
      <file>com.google.javascript.jscomp.ObjectPropertyStringPostprocess.java</file>
      <file>com.google.javascript.jscomp.ObjectPropertyStringPreprocess.java</file>
      <file>com.google.javascript.jscomp.OptimizeArgumentsArray.java</file>
      <file>com.google.javascript.jscomp.OptimizeCalls.java</file>
      <file>com.google.javascript.jscomp.OptimizeParameters.java</file>
      <file>com.google.javascript.jscomp.OptimizeReturns.java</file>
      <file>com.google.javascript.jscomp.ParallelCompilerPass.java</file>
      <file>com.google.javascript.jscomp.parsing.Annotation.java</file>
      <file>com.google.javascript.jscomp.parsing.Config.java</file>
      <file>com.google.javascript.jscomp.parsing.IRFactory.java</file>
      <file>com.google.javascript.jscomp.parsing.JsDocInfoParser.java</file>
      <file>com.google.javascript.jscomp.parsing.JsDocToken.java</file>
      <file>com.google.javascript.jscomp.parsing.JsDocTokenStream.java</file>
      <file>com.google.javascript.jscomp.parsing.NullErrorReporter.java</file>
      <file>com.google.javascript.jscomp.parsing.ParserRunner.java</file>
      <file>com.google.javascript.jscomp.parsing.TypeSafeDispatcher.java</file>
      <file>com.google.javascript.jscomp.PassConfig.java</file>
      <file>com.google.javascript.jscomp.PassFactory.java</file>
      <file>com.google.javascript.jscomp.PeepholeFoldConstants.java</file>
      <file>com.google.javascript.jscomp.PeepholeFoldWithTypes.java</file>
      <file>com.google.javascript.jscomp.PeepholeOptimizationsPass.java</file>
      <file>com.google.javascript.jscomp.PeepholeRemoveDeadCode.java</file>
      <file>com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax.java</file>
      <file>com.google.javascript.jscomp.PerformanceTracker.java</file>
      <file>com.google.javascript.jscomp.PhaseOptimizer.java</file>
      <file>com.google.javascript.jscomp.Position.java</file>
      <file>com.google.javascript.jscomp.PrepareAst.java</file>
      <file>com.google.javascript.jscomp.PrintStreamErrorManager.java</file>
      <file>com.google.javascript.jscomp.ProcessClosurePrimitives.java</file>
      <file>com.google.javascript.jscomp.ProcessDefines.java</file>
      <file>com.google.javascript.jscomp.PropertyRenamingPolicy.java</file>
      <file>com.google.javascript.jscomp.PureFunctionIdentifier.java</file>
      <file>com.google.javascript.jscomp.RecordFunctionInformation.java</file>
      <file>com.google.javascript.jscomp.ReferenceCollectingCallback.java</file>
      <file>com.google.javascript.jscomp.Region.java</file>
      <file>com.google.javascript.jscomp.RemoveTryCatch.java</file>
      <file>com.google.javascript.jscomp.RemoveUnusedNames.java</file>
      <file>com.google.javascript.jscomp.RemoveUnusedPrototypeProperties.java</file>
      <file>com.google.javascript.jscomp.RemoveUnusedVars.java</file>
      <file>com.google.javascript.jscomp.RenameLabels.java</file>
      <file>com.google.javascript.jscomp.RenameProperties.java</file>
      <file>com.google.javascript.jscomp.RenamePrototypes.java</file>
      <file>com.google.javascript.jscomp.RenameVars.java</file>
      <file>com.google.javascript.jscomp.ReplaceCssNames.java</file>
      <file>com.google.javascript.jscomp.ReplaceIdGenerators.java</file>
      <file>com.google.javascript.jscomp.ReplaceMessages.java</file>
      <file>com.google.javascript.jscomp.ReplaceStrings.java</file>
      <file>com.google.javascript.jscomp.Result.java</file>
      <file>com.google.javascript.jscomp.ReverseAbstractInterpreter.java</file>
      <file>com.google.javascript.jscomp.RhinoErrorReporter.java</file>
      <file>com.google.javascript.jscomp.RuntimeTypeCheck.java</file>
      <file>com.google.javascript.jscomp.SanityCheck.java</file>
      <file>com.google.javascript.jscomp.Scope.java</file>
      <file>com.google.javascript.jscomp.ScopeCreator.java</file>
      <file>com.google.javascript.jscomp.ScopedAliases.java</file>
      <file>com.google.javascript.jscomp.SemanticReverseAbstractInterpreter.java</file>
      <file>com.google.javascript.jscomp.ShowByPathWarningsGuard.java</file>
      <file>com.google.javascript.jscomp.SideEffectsAnalysis.java</file>
      <file>com.google.javascript.jscomp.SimpleDefinitionFinder.java</file>
      <file>com.google.javascript.jscomp.SimpleFunctionAliasAnalysis.java</file>
      <file>com.google.javascript.jscomp.SimpleRegion.java</file>
      <file>com.google.javascript.jscomp.SourceAst.java</file>
      <file>com.google.javascript.jscomp.SourceExcerptProvider.java</file>
      <file>com.google.javascript.jscomp.SourceFile.java</file>
      <file>com.google.javascript.jscomp.SourceInformationAnnotator.java</file>
      <file>com.google.javascript.jscomp.SourceMap.java</file>
      <file>com.google.javascript.jscomp.SourceMap2.java</file>
      <file>com.google.javascript.jscomp.SourceMapLegacy.java</file>
      <file>com.google.javascript.jscomp.SpecializationAwareCompilerPass.java</file>
      <file>com.google.javascript.jscomp.SpecializeModule.java</file>
      <file>com.google.javascript.jscomp.StrictModeCheck.java</file>
      <file>com.google.javascript.jscomp.StrictWarningsGuard.java</file>
      <file>com.google.javascript.jscomp.Strings.java</file>
      <file>com.google.javascript.jscomp.StripCode.java</file>
      <file>com.google.javascript.jscomp.SuppressDocWarningsGuard.java</file>
      <file>com.google.javascript.jscomp.SuspiciousPropertiesCheck.java</file>
      <file>com.google.javascript.jscomp.SyntacticScopeCreator.java</file>
      <file>com.google.javascript.jscomp.SyntheticAst.java</file>
      <file>com.google.javascript.jscomp.testing.SimpleSourceExcerptProvider.java</file>
      <file>com.google.javascript.jscomp.testing.TestErrorReporter.java</file>
      <file>com.google.javascript.jscomp.TightenTypes.java</file>
      <file>com.google.javascript.jscomp.Tracer.java</file>
      <file>com.google.javascript.jscomp.TypeCheck.java</file>
      <file>com.google.javascript.jscomp.TypedCodeGenerator.java</file>
      <file>com.google.javascript.jscomp.TypedScopeCreator.java</file>
      <file>com.google.javascript.jscomp.TypeInference.java</file>
      <file>com.google.javascript.jscomp.TypeInferencePass.java</file>
      <file>com.google.javascript.jscomp.TypeValidator.java</file>
      <file>com.google.javascript.jscomp.UnfoldCompoundAssignments.java</file>
      <file>com.google.javascript.jscomp.UnreachableCodeElimination.java</file>
      <file>com.google.javascript.jscomp.UseSite.java</file>
      <file>com.google.javascript.jscomp.VarCheck.java</file>
      <file>com.google.javascript.jscomp.VariableMap.java</file>
      <file>com.google.javascript.jscomp.VariableNameGenerator.java</file>
      <file>com.google.javascript.jscomp.VariableReferenceCheck.java</file>
      <file>com.google.javascript.jscomp.VariableRenamingPolicy.java</file>
      <file>com.google.javascript.jscomp.VariableShadowDeclarationCheck.java</file>
      <file>com.google.javascript.jscomp.VariableVisibilityAnalysis.java</file>
      <file>com.google.javascript.jscomp.VerboseMessageFormatter.java</file>
      <file>com.google.javascript.jscomp.WarningLevel.java</file>
      <file>com.google.javascript.jscomp.WarningsGuard.java</file>
      <file>com.google.javascript.rhino.CompilerEnvirons.java</file>
      <file>com.google.javascript.rhino.Context.java</file>
      <file>com.google.javascript.rhino.Decompiler.java</file>
      <file>com.google.javascript.rhino.DToA.java</file>
      <file>com.google.javascript.rhino.EcmaError.java</file>
      <file>com.google.javascript.rhino.ErrorReporter.java</file>
      <file>com.google.javascript.rhino.EvaluatorException.java</file>
      <file>com.google.javascript.rhino.FunctionNode.java</file>
      <file>com.google.javascript.rhino.IRFactory.java</file>
      <file>com.google.javascript.rhino.JavaScriptException.java</file>
      <file>com.google.javascript.rhino.JSDocInfo.java</file>
      <file>com.google.javascript.rhino.JSDocInfoBuilder.java</file>
      <file>com.google.javascript.rhino.jstype.AllType.java</file>
      <file>com.google.javascript.rhino.jstype.ArrowType.java</file>
      <file>com.google.javascript.rhino.jstype.BooleanLiteralSet.java</file>
      <file>com.google.javascript.rhino.jstype.BooleanType.java</file>
      <file>com.google.javascript.rhino.jstype.EnumElementType.java</file>
      <file>com.google.javascript.rhino.jstype.EnumType.java</file>
      <file>com.google.javascript.rhino.jstype.ErrorFunctionType.java</file>
      <file>com.google.javascript.rhino.jstype.FunctionBuilder.java</file>
      <file>com.google.javascript.rhino.jstype.FunctionParamBuilder.java</file>
      <file>com.google.javascript.rhino.jstype.FunctionPrototypeType.java</file>
      <file>com.google.javascript.rhino.jstype.FunctionType.java</file>
      <file>com.google.javascript.rhino.jstype.IndexedType.java</file>
      <file>com.google.javascript.rhino.jstype.InstanceObjectType.java</file>
      <file>com.google.javascript.rhino.jstype.JSType.java</file>
      <file>com.google.javascript.rhino.jstype.JSTypeNative.java</file>
      <file>com.google.javascript.rhino.jstype.JSTypeRegistry.java</file>
      <file>com.google.javascript.rhino.jstype.NamedType.java</file>
      <file>com.google.javascript.rhino.jstype.NoObjectType.java</file>
      <file>com.google.javascript.rhino.jstype.NoType.java</file>
      <file>com.google.javascript.rhino.jstype.NullType.java</file>
      <file>com.google.javascript.rhino.jstype.NumberType.java</file>
      <file>com.google.javascript.rhino.jstype.ObjectType.java</file>
      <file>com.google.javascript.rhino.jstype.ParameterizedType.java</file>
      <file>com.google.javascript.rhino.jstype.PrototypeObjectType.java</file>
      <file>com.google.javascript.rhino.jstype.ProxyObjectType.java</file>
      <file>com.google.javascript.rhino.jstype.RecordType.java</file>
      <file>com.google.javascript.rhino.jstype.RecordTypeBuilder.java</file>
      <file>com.google.javascript.rhino.jstype.SimpleSlot.java</file>
      <file>com.google.javascript.rhino.jstype.StaticScope.java</file>
      <file>com.google.javascript.rhino.jstype.StaticSlot.java</file>
      <file>com.google.javascript.rhino.jstype.StringType.java</file>
      <file>com.google.javascript.rhino.jstype.TemplateType.java</file>
      <file>com.google.javascript.rhino.jstype.TernaryValue.java</file>
      <file>com.google.javascript.rhino.jstype.UnionType.java</file>
      <file>com.google.javascript.rhino.jstype.UnionTypeBuilder.java</file>
      <file>com.google.javascript.rhino.jstype.UnknownType.java</file>
      <file>com.google.javascript.rhino.jstype.UnresolvedTypeExpression.java</file>
      <file>com.google.javascript.rhino.jstype.ValueType.java</file>
      <file>com.google.javascript.rhino.jstype.Visitor.java</file>
      <file>com.google.javascript.rhino.jstype.VoidType.java</file>
      <file>com.google.javascript.rhino.JSTypeExpression.java</file>
      <file>com.google.javascript.rhino.Kit.java</file>
      <file>com.google.javascript.rhino.Node.java</file>
      <file>com.google.javascript.rhino.ObjArray.java</file>
      <file>com.google.javascript.rhino.ObjToIntMap.java</file>
      <file>com.google.javascript.rhino.Parser.java</file>
      <file>com.google.javascript.rhino.RhinoException.java</file>
      <file>com.google.javascript.rhino.ScriptOrFnNode.java</file>
      <file>com.google.javascript.rhino.ScriptRuntime.java</file>
      <file>com.google.javascript.rhino.SimpleErrorReporter.java</file>
      <file>com.google.javascript.rhino.SourcePosition.java</file>
      <file>com.google.javascript.rhino.testing.Asserts.java</file>
      <file>com.google.javascript.rhino.testing.BaseJSTypeTestCase.java</file>
      <file>com.google.javascript.rhino.testing.EmptyScope.java</file>
      <file>com.google.javascript.rhino.testing.TestErrorReporter.java</file>
      <file>com.google.javascript.rhino.Token.java</file>
      <file>com.google.javascript.rhino.TokenStream.java</file>
      <file>com.google.javascript.rhino.UintMap.java</file>
      <file>com.google.javascript.rhino.UniqueTag.java</file>
    </fixedFiles>
  </bug>
</bugrepository>
